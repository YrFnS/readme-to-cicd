/**
 * Streaming data generator for readme-parser-integration.test.ts
 * Replaces large static fixture with on-demand generation
 * Generated by migrate-to-streaming-fixtures.js
 */

const { StreamingDataFactory } = require('../../src/shared/streaming-test-data');

/**
 * Generate streaming readme data
 * @param {string} size - Size category: 'small', 'medium', 'large', 'xlarge'
 * @returns {Promise<{content: string, metrics: object}>}
 */
async function generatereadmeData(size = 'medium') {
  const config = {
    type: 'readme',
    size: size,
    maxMemoryUsage: 5242880
  };

  return await StreamingDataFactory.generateString(config);
}

/**
 * Generate streaming data with specific configuration
 * @param {object} config - Streaming data configuration
 * @returns {Promise<{content: string, metrics: object}>}
 */
async function generateWithConfig(config) {
  return await StreamingDataFactory.generateString({
    type: 'readme',
    size: 'medium',
    ...config
  });
}

module.exports = {
  generatereadmeData,
  generateWithConfig,
  
  // Legacy compatibility
  getContent: () => generatereadmeData('medium').then(r => r.content),
  
  // Configuration helpers
  getSmallContent: () => generatereadmeData('small').then(r => r.content),
  getMediumContent: () => generatereadmeData('medium').then(r => r.content),
  getLargeContent: () => generatereadmeData('large').then(r => r.content)
};
