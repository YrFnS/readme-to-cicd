{
  "name": "readme-to-cicd",
  "displayName": "README to CICD",
  "description": "Generate CI/CD workflows from README files automatically",
  "version": "1.0.0",
  "publisher": "readme-to-cicd",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/readme-to-cicd.git"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other",
    "Snippets",
    "Formatters"
  ],
  "keywords": [
    "cicd",
    "github-actions",
    "workflow",
    "automation",
    "devops",
    "ci",
    "cd",
    "readme"
  ],
  "activationEvents": [
    "onLanguage:markdown",
    "workspaceContains:**/README.md",
    "onCommand:readme-to-cicd.generate"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "readme-to-cicd.generate",
        "title": "Generate Workflow",
        "category": "README to CICD",
        "icon": "$(gear)"
      },
      {
        "command": "readme-to-cicd.validate",
        "title": "Validate Workflow",
        "category": "README to CICD",
        "icon": "$(check)"
      },
      {
        "command": "readme-to-cicd.preview",
        "title": "Preview Workflow",
        "category": "README to CICD",
        "icon": "$(eye)"
      },
      {
        "command": "readme-to-cicd.init",
        "title": "Initialize Configuration",
        "category": "README to CICD",
        "icon": "$(settings-gear)"
      },
      {
        "command": "readme-to-cicd.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "readme-to-cicd.generate",
          "when": "resourceFilename =~ /README\\.(md|txt)$/i",
          "group": "readme-to-cicd@1"
        }
      ],
      "editor/context": [
        {
          "command": "readme-to-cicd.generate",
          "when": "resourceFilename =~ /README\\.(md|txt)$/i",
          "group": "readme-to-cicd@1"
        },
        {
          "command": "readme-to-cicd.preview",
          "when": "resourceFilename =~ /README\\.(md|txt)$/i",
          "group": "readme-to-cicd@2"
        }
      ],
      "editor/title": [
        {
          "command": "readme-to-cicd.generate",
          "when": "resourceFilename =~ /README\\.(md|txt)$/i",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "readme-to-cicd.refresh",
          "when": "view == readme-to-cicd-sidebar",
          "group": "navigation"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "readme-to-cicd-sidebar",
          "name": "README to CICD",
          "when": "workspaceHasReadme"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "readme-to-cicd-sidebar",
        "contents": "No README.md file found in this workspace.\n[Create README.md](command:workbench.action.files.newUntitledFile)\nTo learn more about README to CICD [read our docs](https://readme-to-cicd.com/docs)."
      }
    ],
    "configuration": {
      "title": "README to CICD",
      "properties": {
        "readme-to-cicd.autoDetect": {
          "type": "boolean",
          "default": true,
          "description": "Automatically detect frameworks from README content"
        },
        "readme-to-cicd.defaultOptimization": {
          "type": "string",
          "enum": [
            "basic",
            "standard",
            "aggressive"
          ],
          "default": "standard",
          "description": "Default optimization level for generated workflows"
        },
        "readme-to-cicd.workflowTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ci",
              "cd",
              "release"
            ]
          },
          "default": [
            "ci",
            "cd"
          ],
          "description": "Default workflow types to generate"
        },
        "readme-to-cicd.outputDirectory": {
          "type": "string",
          "default": ".github/workflows",
          "description": "Directory to save generated workflows"
        },
        "readme-to-cicd.showStatusBar": {
          "type": "boolean",
          "default": true,
          "description": "Show framework detection in status bar"
        },
        "readme-to-cicd.enablePreview": {
          "type": "boolean",
          "default": true,
          "description": "Enable workflow preview before generation"
        },
        "readme-to-cicd.autoCommit": {
          "type": "boolean",
          "default": false,
          "description": "Automatically commit generated workflows to git"
        },
        "readme-to-cicd.commitMessage": {
          "type": "string",
          "default": "Add CI/CD workflows generated from README",
          "description": "Commit message for auto-committed workflows"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p tsconfig.test.json",
    "watch-tests": "tsc -p tsconfig.test.json -w",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "test:basic": "npm run compile-basic-test && node ./test/simple-runner.js",
    "compile-basic-test": "tsc test/suite/extension-basic.test.ts test/setup/vscode-mock.ts test/setup/test-globals.ts test/mocks/ExtensionManager.mock.ts --outDir out --target es2020 --module commonjs --lib es2020,dom --moduleResolution node --esModuleInterop --skipLibCheck --declaration false"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/node": "16.x",
    "@types/mocha": "^10.0.6",
    "@types/sinon": "^17.0.2",
    "@types/jsdom": "^21.1.6",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "eslint": "^8.28.0",
    "typescript": "^4.9.4",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.0",
    "ts-loader": "^9.4.1",
    "@vscode/test-electron": "^2.2.0",
    "mocha": "^10.2.0",
    "sinon": "^17.0.1",
    "jsdom": "^23.0.1",
    "glob": "^10.3.10",
    "ajv": "^8.12.0",
    "ajv-formats": "^2.1.1"
  },
  "dependencies": {
    "js-yaml": "^4.1.0",
    "marked": "^9.1.6"
  }
}