{
  "name": "readme-to-cicd",
  "displayName": "README to CI/CD",
  "description": "Automatically generate optimized GitHub Actions CI/CD workflows from README files with intelligent framework detection",
  "version": "0.1.0",
  "publisher": "readme-to-cicd",
  "author": {
    "name": "README to CI/CD Team",
    "email": "support@readme-to-cicd.com"
  },
  "license": "MIT",
  "homepage": "https://github.com/readme-to-cicd/vscode-extension",
  "repository": {
    "type": "git",
    "url": "https://github.com/readme-to-cicd/vscode-extension.git"
  },
  "bugs": {
    "url": "https://github.com/readme-to-cicd/vscode-extension/issues"
  },
  "icon": "media/icon.png",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.74.0",
    "node": ">=18.0.0"
  },
  "categories": [
    "Other",
    "Snippets",
    "Formatters",
    "Extension Packs"
  ],
  "keywords": [
    "github-actions",
    "ci-cd",
    "workflow",
    "automation",
    "readme",
    "devops",
    "continuous-integration",
    "continuous-deployment",
    "yaml",
    "pipeline",
    "build",
    "test",
    "deploy",
    "framework-detection",
    "productivity"
  ],
  "badges": [
    {
      "url": "https://img.shields.io/visual-studio-marketplace/v/readme-to-cicd.readme-to-cicd",
      "href": "https://marketplace.visualstudio.com/items?itemName=readme-to-cicd.readme-to-cicd",
      "description": "Version"
    },
    {
      "url": "https://img.shields.io/visual-studio-marketplace/i/readme-to-cicd.readme-to-cicd",
      "href": "https://marketplace.visualstudio.com/items?itemName=readme-to-cicd.readme-to-cicd",
      "description": "Installs"
    }
  ],
  "qna": "https://github.com/readme-to-cicd/vscode-extension/discussions",
  "sponsor": {
    "url": "https://github.com/sponsors/readme-to-cicd"
  },
  "activationEvents": [
    "onLanguage:markdown",
    "onLanguage:yaml",
    "onLanguage:yml",
    "workspaceContains:**/README.md",
    "workspaceContains:**/.github/workflows/*.yml",
    "workspaceContains:**/.github/workflows/*.yaml"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "readme-to-cicd.generateWorkflow",
        "title": "Generate CI/CD Workflow",
        "category": "README to CI/CD",
        "icon": "$(gear)"
      },
      {
        "command": "readme-to-cicd.previewWorkflow",
        "title": "Preview Workflow",
        "category": "README to CI/CD",
        "icon": "$(preview)"
      },
      {
        "command": "readme-to-cicd.validateWorkflow",
        "title": "Validate Workflow",
        "category": "README to CI/CD",
        "icon": "$(check)"
      },
      {
        "command": "readme-to-cicd.openConfiguration",
        "title": "Open Configuration",
        "category": "README to CI/CD",
        "icon": "$(settings-gear)"
      },
      {
        "command": "readme-to-cicd.refreshDetection",
        "title": "Refresh Framework Detection",
        "category": "README to CI/CD",
        "icon": "$(refresh)"
      },
      {
        "command": "readme-to-cicd.workflowExplorer.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "readme-to-cicd.workflowExplorer.generateWorkflow",
        "title": "Generate Workflow",
        "icon": "$(gear)"
      },
      {
        "command": "readme-to-cicd.workflowExplorer.openFile",
        "title": "Open File",
        "icon": "$(go-to-file)"
      },
      {
        "command": "readme-to-cicd.workflowExplorer.validateWorkflow",
        "title": "Validate Workflow",
        "icon": "$(check)"
      },
      {
        "command": "readme-to-cicd.validateCurrentWorkflow",
        "title": "Validate Current Workflow",
        "category": "README to CI/CD",
        "icon": "$(check)"
      },
      {
        "command": "readme-to-cicd.showSchemaHelp",
        "title": "Show Schema Help",
        "category": "README to CI/CD",
        "icon": "$(question)"
      },
      {
        "command": "readme-to-cicd.formatWorkflow",
        "title": "Format Workflow",
        "category": "README to CI/CD",
        "icon": "$(symbol-property)"
      },
      {
        "command": "readme-to-cicd.insertWorkflowSnippet",
        "title": "Insert Workflow Snippet",
        "category": "README to CI/CD",
        "icon": "$(add)"
      },
      {
        "command": "readme-to-cicd.stageWorkflowFiles",
        "title": "Stage Workflow Files",
        "category": "README to CI/CD",
        "icon": "$(add)"
      },
      {
        "command": "readme-to-cicd.commitWorkflowChanges",
        "title": "Commit Workflow Changes",
        "category": "README to CI/CD",
        "icon": "$(git-commit)"
      },
      {
        "command": "readme-to-cicd.createWorkflowBranch",
        "title": "Create Workflow Branch",
        "category": "README to CI/CD",
        "icon": "$(git-branch)"
      },
      {
        "command": "readme-to-cicd.resolveMergeConflicts",
        "title": "Resolve Merge Conflicts",
        "category": "README to CI/CD",
        "icon": "$(git-merge)"
      },
      {
        "command": "readme-to-cicd.generateMultiWorkflow",
        "title": "Generate Multi-Workflow",
        "category": "README to CI/CD",
        "icon": "$(layers)"
      },
      {
        "command": "readme-to-cicd.manageTemplates",
        "title": "Manage Templates",
        "category": "README to CI/CD",
        "icon": "$(library)"
      },
      {
        "command": "readme-to-cicd.createCustomTemplate",
        "title": "Create Custom Template",
        "category": "README to CI/CD",
        "icon": "$(add)"
      },
      {
        "command": "readme-to-cicd.updateWorkflows",
        "title": "Update Workflows",
        "category": "README to CI/CD",
        "icon": "$(sync)"
      },
      {
        "command": "readme-to-cicd.coordinateWorkflows",
        "title": "Coordinate Workflows",
        "category": "README to CI/CD",
        "icon": "$(organization)"
      },
      {
        "command": "readme-to-cicd.importOrganizationTemplates",
        "title": "Import Organization Templates",
        "category": "README to CI/CD",
        "icon": "$(cloud-download)"
      },
      {
        "command": "readme-to-cicd.exportTemplates",
        "title": "Export Templates",
        "category": "README to CI/CD",
        "icon": "$(cloud-upload)"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "readme-to-cicd.generateWorkflow",
          "when": "resourceFilename == README.md",
          "group": "readme-to-cicd@1"
        },
        {
          "command": "readme-to-cicd.previewWorkflow",
          "when": "resourceFilename == README.md",
          "group": "readme-to-cicd@2"
        },
        {
          "command": "readme-to-cicd.generateMultiWorkflow",
          "when": "resourceFilename == README.md",
          "group": "readme-to-cicd@3"
        },
        {
          "command": "readme-to-cicd.createCustomTemplate",
          "when": "resourceExtname == .yml || resourceExtname == .yaml",
          "group": "readme-to-cicd@1"
        },
        {
          "command": "readme-to-cicd.updateWorkflows",
          "when": "resourcePath =~ /\\.github\\/workflows/",
          "group": "readme-to-cicd@1"
        }
      ],
      "editor/context": [
        {
          "command": "readme-to-cicd.generateWorkflow",
          "when": "resourceFilename == README.md",
          "group": "readme-to-cicd@1"
        }
      ],
      "commandPalette": [
        {
          "command": "readme-to-cicd.generateWorkflow",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.previewWorkflow",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.validateWorkflow",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.openConfiguration",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.refreshDetection",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.workflowExplorer.refresh",
          "when": "false"
        },
        {
          "command": "readme-to-cicd.workflowExplorer.generateWorkflow",
          "when": "false"
        },
        {
          "command": "readme-to-cicd.workflowExplorer.openFile",
          "when": "false"
        },
        {
          "command": "readme-to-cicd.workflowExplorer.validateWorkflow",
          "when": "false"
        },
        {
          "command": "readme-to-cicd.validateCurrentWorkflow",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.showSchemaHelp",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.formatWorkflow",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.insertWorkflowSnippet",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.stageWorkflowFiles",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.commitWorkflowChanges",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.createWorkflowBranch",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.resolveMergeConflicts",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.generateMultiWorkflow",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.manageTemplates",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.createCustomTemplate",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.updateWorkflows",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.coordinateWorkflows",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.importOrganizationTemplates",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "readme-to-cicd.exportTemplates",
          "when": "workspaceFolderCount > 0"
        }
      ],
      "view/title": [
        {
          "command": "readme-to-cicd.workflowExplorer.refresh",
          "when": "view == readme-to-cicd.workflowExplorer",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "readme-to-cicd.workflowExplorer.generateWorkflow",
          "when": "view == readme-to-cicd.workflowExplorer && viewItem == readme-file",
          "group": "workflow@1"
        },
        {
          "command": "readme-to-cicd.workflowExplorer.openFile",
          "when": "view == readme-to-cicd.workflowExplorer && (viewItem == workflow-file || viewItem == readme-file)",
          "group": "navigation@1"
        },
        {
          "command": "readme-to-cicd.workflowExplorer.validateWorkflow",
          "when": "view == readme-to-cicd.workflowExplorer && viewItem == workflow-file",
          "group": "workflow@2"
        }
      ],
      "editor/context": [
        {
          "command": "readme-to-cicd.validateCurrentWorkflow",
          "when": "resourceExtname == .yml || resourceExtname == .yaml",
          "group": "readme-to-cicd@1"
        },
        {
          "command": "readme-to-cicd.formatWorkflow",
          "when": "resourceExtname == .yml || resourceExtname == .yaml",
          "group": "readme-to-cicd@2"
        },
        {
          "command": "readme-to-cicd.insertWorkflowSnippet",
          "when": "resourceExtname == .yml || resourceExtname == .yaml",
          "group": "readme-to-cicd@3"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "readme-to-cicd.workflowExplorer",
          "name": "Workflow Explorer",
          "when": "workspaceFolderCount > 0"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "readme-to-cicd",
          "title": "README to CI/CD",
          "icon": "$(gear)"
        }
      ]
    },
    "configuration": {
      "title": "README to CI/CD",
      "properties": {
        "readme-to-cicd.defaultOutputDirectory": {
          "type": "string",
          "default": ".github/workflows",
          "description": "Default directory for generated workflow files"
        },
        "readme-to-cicd.enableAutoGeneration": {
          "type": "boolean",
          "default": false,
          "description": "Automatically generate workflows when README changes"
        },
        "readme-to-cicd.showPreviewByDefault": {
          "type": "boolean",
          "default": true,
          "description": "Show preview panel before generating workflows"
        },
        "readme-to-cicd.enableInlineValidation": {
          "type": "boolean",
          "default": true,
          "description": "Enable real-time validation of workflow files"
        },
        "readme-to-cicd.notificationLevel": {
          "type": "string",
          "enum": [
            "all",
            "errors",
            "none"
          ],
          "default": "all",
          "description": "Level of notifications to show"
        },
        "readme-to-cicd.preferredWorkflowTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ci",
              "cd",
              "release",
              "maintenance"
            ]
          },
          "default": [
            "ci"
          ],
          "description": "Default workflow types to generate"
        },
        "readme-to-cicd.telemetry.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable anonymous telemetry to help improve the extension"
        },
        "readme-to-cicd.telemetry.level": {
          "type": "string",
          "enum": [
            "off",
            "error",
            "all"
          ],
          "default": "all",
          "description": "Level of telemetry data to collect"
        },
        "readme-to-cicd.telemetry.anonymizeData": {
          "type": "boolean",
          "default": true,
          "description": "Anonymize sensitive data in telemetry"
        },
        "readme-to-cicd.telemetry.collectUsageData": {
          "type": "boolean",
          "default": true,
          "description": "Collect usage statistics and feature adoption data"
        },
        "readme-to-cicd.telemetry.collectErrorData": {
          "type": "boolean",
          "default": true,
          "description": "Collect error reports to help fix issues"
        },
        "readme-to-cicd.telemetry.collectPerformanceData": {
          "type": "boolean",
          "default": true,
          "description": "Collect performance metrics to optimize the extension"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run build:prod",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "test": "node ./out/test/runTest.js",
    "test:unit": "npm run compile && mocha out/test/unit/**/*.test.js",
    "test:integration": "npm run compile && mocha out/test/integration/**/*.test.js",
    "test:coverage": "nyc npm run test",
    "build": "webpack --mode development",
    "build:prod": "NODE_ENV=production webpack --mode production",
    "build:watch": "webpack --mode development --watch",
    "build:analyze": "webpack-bundle-analyzer out/extension.js",
    "package": "npm run build:prod && vsce package",
    "package:pre-release": "npm run build:prod && vsce package --pre-release",
    "publish": "npm run package && vsce publish",
    "publish:pre-release": "npm run package:pre-release && vsce publish --pre-release",
    "clean": "rimraf out *.vsix",
    "validate": "npm run lint && npm run test && npm run build:prod",
    "ci": "npm ci && npm run validate",
    "deploy": "node scripts/deploy.js",
    "deploy:dry-run": "npm run validate && npm run package",
    "version:patch": "npm version patch && npm run deploy",
    "version:minor": "npm version minor && npm run deploy",
    "version:major": "npm version major && npm run deploy"
  },
  "devDependencies": {
    "@babel/core": "^7.28.3",
    "@babel/preset-react": "^7.27.1",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/sinon": "^17.0.2",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "@vscode/test-electron": "^2.3.4",
    "@vscode/vsce": "^2.19.0",
    "babel-loader": "^10.0.0",
    "copy-webpack-plugin": "^11.0.0",
    "css-loader": "^7.1.2",
    "eslint": "^8.47.0",
    "glob": "^10.3.10",
    "mocha": "^10.2.0",
    "nyc": "^15.1.0",
    "rimraf": "^5.0.5",
    "sinon": "^17.0.1",
    "style-loader": "^4.0.0",
    "ts-loader": "^9.4.4",
    "typescript": "^5.1.6",
    "webpack": "^5.88.0",
    "webpack-bundle-analyzer": "^4.9.1",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@types/react": "^19.1.10",
    "@types/react-dom": "^19.1.7",
    "ajv": "^8.12.0",
    "ajv-formats": "^2.1.1",
    "handlebars": "^4.7.8",
    "js-yaml": "^4.1.0",
    "marked": "^9.1.2",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "yaml": "^2.3.4"
  }
}
