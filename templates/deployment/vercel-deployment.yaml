name: Vercel Deployment
type: cd

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write
  pull-requests: write

concurrency:
  group: vercel-deployment-${{ github.ref }}
  cancel-in-progress: true

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

jobs:
  build-and-deploy:
    name: Build and Deploy to Vercel
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event_name == 'pull_request' && 'preview' || 'production' }}
      url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ github.event_name == 'pull_request' && 'preview' || 'production' }} --token=${{ env.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build ${{ github.event_name == 'pull_request' && '' || '--prod' }} --token=${{ env.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          DEPLOY_URL=$(vercel deploy --prebuilt ${{ github.event_name == 'pull_request' && '' || '--prod' }} --token=${{ env.VERCEL_TOKEN }})
          echo "preview-url=$DEPLOY_URL" >> $GITHUB_OUTPUT
          echo "deploy-url=$DEPLOY_URL" >> $GITHUB_OUTPUT

      {{#if enableHealthChecks}}
      - name: Health check
        run: |
          echo "Performing health check..."
          DEPLOY_URL="${{ steps.deploy.outputs.deploy-url }}"
          
          # Wait for deployment to be ready
          sleep 30
          
          # Health check
          curl -f "$DEPLOY_URL" || exit 1
      {{/if}}

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deployUrl = '${{ steps.deploy.outputs.deploy-url }}';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Vercel Preview Deployed!**\n\nâœ… Preview URL: ${deployUrl}\n\nBuilt from commit: ${context.sha.substring(0, 7)}`
            });

      - name: Update deployment status
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const deployUrl = '${{ steps.deploy.outputs.deploy-url }}';
            
            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment?.id,
              state: 'success',
              environment_url: deployUrl,
              description: 'Deployed to Vercel preview'
            });

      - name: Notify deployment success
        if: success()
        run: |
          echo "âœ… Vercel Deployment successful!"
          echo "URL: ${{ steps.deploy.outputs.deploy-url }}"
          echo "Context: ${{ github.event_name == 'pull_request' && 'preview' || 'production' }}"