name: Netlify Deployment
type: cd

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write
  pull-requests: write

concurrency:
  group: netlify-deployment-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: {{staticSiteConfig.nodeVersion}}
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

jobs:
  build-and-deploy:
    name: Build and Deploy to Netlify
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event_name == 'pull_request' && 'preview' || 'production' }}
      url: ${{ steps.deploy.outputs.deploy-url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      {{#if staticSiteConfig.nodeVersion}}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      {{/if}}

      {{#if staticSiteConfig.nodeVersion}}
      - name: Install dependencies
        run: npm ci
      {{/if}}

      {{#if staticSiteConfig.environmentVariables}}
      - name: Build with environment variables
        env:
          {{#each staticSiteConfig.environmentVariables}}
          {{@key}}: {{this}}
          {{/each}}
          # Add Netlify-specific environment variables
          NETLIFY: true
          CONTEXT: ${{ github.event_name == 'pull_request' && 'deploy-preview' || 'production' }}
        run: {{staticSiteConfig.buildCommand}}
      {{else}}
      - name: Build static site
        env:
          NETLIFY: true
          CONTEXT: ${{ github.event_name == 'pull_request' && 'deploy-preview' || 'production' }}
        run: {{staticSiteConfig.buildCommand}}
      {{/if}}

      - name: Deploy to Netlify
        id: deploy
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir={{staticSiteConfig.outputDirectory}} --functions=netlify/functions ${{ github.event_name == 'pull_request' && format('--alias=deploy-preview-{0}', github.event.number) || '--prod' }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ env.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ env.NETLIFY_SITE_ID }}

      - name: Update deployment status
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const deployUrl = '${{ steps.deploy.outputs.deploy-url }}';
            
            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment?.id,
              state: 'success',
              environment_url: deployUrl,
              description: 'Deployed to Netlify preview'
            });

      {{#if enableHealthChecks}}
      - name: Health check
        run: |
          echo "Performing health check..."
          DEPLOY_URL="${{ steps.deploy.outputs.deploy-url }}"
          
          # Wait for deployment to be ready
          sleep 30
          
          # Health check
          curl -f "$DEPLOY_URL" || exit 1
      {{/if}}

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deployUrl = '${{ steps.deploy.outputs.deploy-url }}';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Netlify Preview Deployed!**\n\nâœ… Preview URL: ${deployUrl}\n\nBuilt from commit: ${context.sha.substring(0, 7)}`
            });

      - name: Notify deployment success
        if: success()
        run: |
          echo "âœ… Netlify Deployment successful!"
          echo "URL: ${{ steps.deploy.outputs.deploy-url }}"
          echo "Context: ${{ github.event_name == 'pull_request' && 'preview' || 'production' }}"