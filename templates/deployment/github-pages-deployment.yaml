name: GitHub Pages Deployment
type: cd

on:
  push:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-deployment-${{ github.ref }}
  cancel-in-progress: false

env:
  NODE_VERSION: {{staticSiteConfig.nodeVersion}}

jobs:
  build:
    name: Build Static Site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      {{#if staticSiteConfig.nodeVersion}}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      {{/if}}

      {{#if staticSiteConfig.nodeVersion}}
      - name: Install dependencies
        run: npm ci
      {{/if}}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      {{#if staticSiteConfig.environmentVariables}}
      - name: Build with environment variables
        env:
          {{#each staticSiteConfig.environmentVariables}}
          {{@key}}: {{this}}
          {{/each}}
        run: {{staticSiteConfig.buildCommand}}
      {{else}}
      - name: Build static site
        run: {{staticSiteConfig.buildCommand}}
      {{/if}}

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: {{staticSiteConfig.outputDirectory}}

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      {{#if enableHealthChecks}}
      - name: Health check
        run: |
          echo "Performing health check..."
          # Wait for deployment to be ready
          sleep 30
          
          # Health check
          curl -f "${{ steps.deployment.outputs.page_url }}" || exit 1
      {{/if}}

      - name: Notify deployment success
        if: success()
        run: |
          echo "âœ… GitHub Pages Deployment successful!"
          echo "URL: ${{ steps.deployment.outputs.page_url }}"