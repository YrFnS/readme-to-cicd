name: "{{name}} - Spring Boot Maven CI"
type: ci
triggers:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  - name: "test"
    runsOn: "ubuntu-latest"
    timeout: 30
    strategy:
      matrix:
        java-version: {{jdkVersions}}
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v4"
      
      - name: "Setup JDK"
        uses: "actions/setup-java@v4"
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "temurin"
          cache: "maven"
      
      - name: "Cache Maven dependencies"
        uses: "actions/cache@v4"
        with:
          path: "~/.m2/repository"
          key: "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}"
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: "Validate Maven wrapper"
        run: "mvn -N wrapper:wrapper"
        if: "{{hasMavenWrapper}}"
      
      - name: "Run Maven clean"
        run: "{{cleanCommand}}"
      
      - name: "Compile application"
        run: "{{buildCommand}}"
      
      - name: "Run static analysis"
        run: "{{lintCommand}}"
        if: "{{hasCheckstyle}} || {{hasPMD}}"
      
      - name: "Run SpotBugs analysis"
        run: "mvn spotbugs:check"
        if: "{{hasSpotbugs}}"
      
      - name: "Run tests"
        run: "{{testCommand}}"
        env:
          SPRING_PROFILES_ACTIVE: "test"
      
      - name: "Generate test coverage report"
        run: "mvn jacoco:report"
        if: "{{hasJaCoCo}}"
      
      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v4"
        if: "{{hasJaCoCo}}"
        with:
          token: "${{ secrets.CODECOV_TOKEN }}"
          file: "./target/site/jacoco/jacoco.xml"
          fail_ci_if_error: false
      
      - name: "Package application"
        run: "{{packageCommand}}"
      
      - name: "Upload build artifacts"
        uses: "actions/upload-artifact@v4"
        with:
          name: "spring-boot-jar-${{ matrix.java-version }}"
          path: "target/*.jar"
          retention-days: 7
      
      - name: "Spring Boot health check"
        run: |
          java -jar target/*.jar --server.port=8080 &
          sleep 30
          curl -f http://localhost:8080/actuator/health || exit 1
          pkill -f "java -jar"
        if: "{{hasSpringBootActuator}}"